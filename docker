# Multi-stage build for C++ blockchain node
FROM ubuntu:22.04 AS builder

# Install build dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    cmake \
    git \
    pkg-config \
    libssl-dev \
    libcurl4-openssl-dev \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy source code
COPY . .

# Create build directory
RUN mkdir -p build

# Configure and build
WORKDIR /app/build
RUN cmake .. \
    -DCMAKE_BUILD_TYPE=Release \
    -DCMAKE_INSTALL_PREFIX=/usr/local

RUN make -j$(nproc)

# Runtime stage
FROM ubuntu:22.04

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libssl3 \
    libcurl4 \
    ca-certificates \
    && rm -rf /var/lib/apt/lists/*

# Create non-root user
RUN groupadd -r blockchain && useradd -r -g blockchain blockchain

# Create application directory
WORKDIR /app

# Copy binary from builder stage
COPY --from=builder /app/build/bin/blockchain_node /usr/local/bin/

# Create data directory for blockchain storage
RUN mkdir -p /app/data && chown blockchain:blockchain /app/data

# Switch to non-root user
USER blockchain

# Expose ports
EXPOSE 8080 8333 8334

# Set environment variables
ENV BLOCKCHAIN_DATA_DIR=/app/data
ENV LOG_LEVEL=info

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/api/status || exit 1

# Start the blockchain node
CMD ["blockchain_node"]
